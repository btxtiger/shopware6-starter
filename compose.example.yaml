services:
    php:
        container_name: sw_php
        image: shopware6/php:8.3
        environment:
            PHP_MEMORY_LIMIT: 2G
            PHP_MAX_UPLOAD_SIZE: 2G
            PHP_MAX_EXECUTION_TIME: 600
            PHP_SESSION_HANDLER: redis
            # LETSENCRYPT_HOST: ${SW_DOMAIN},www.${SW_DOMAIN}
            # VIRTUAL_HOST: ${SW_DOMAIN}
            # VIRTUAL_PORT: 8000
        volumes:
            # Docker Volume
            - sw_volume:/var/www/html

            # Other
            - ./file-share:/z-file-share
            - ./.env:/var/www/html/.env.local:ro
            - ./persistent-data/shopware/composer.json:/var/www/html/composer.json:rw
            - ./persistent-data/shopware/auth.json:/var/www/html/auth.json:rw
            - ./persistent-data/shopware/robots.txt:/var/www/html/public/robots.txt:ro
            - ./shopware/vendor_patches:/var/www/html/vendor_patches:ro
            - ./shopware/docker/init:/z-init-data:ro

            # Shopware
            - ./shopware/shopware.yaml:/var/www/html/config/packages/z100-shopware.yaml:ro
            - ./shopware/framework.yaml:/var/www/html/config/packages/z100-framework.yaml:ro
            - ./shopware/monolog.yaml:/var/www/html/config/packages/z100-monolog.yaml:ro

            # Custom Plugins
            - ./shopware/plugins/ShopFeatures:/var/www/html/custom/plugins/ShopFeatures:rw
            - ./shopware/plugins/ShopTemplates:/var/www/html/custom/plugins/ShopTemplates:rw
            - ./shopware/plugins/ShopTheme:/var/www/html/custom/plugins/ShopTheme:rw

            # Development only
            # - ./shopware/dev.php.ini:/usr/local/etc/php/conf.d/zzz-my-php.ini:cached,ro
            # - ./shopware/shopware-dev.yaml:/var/www/html/config/packages/z500-shopware-dev.yaml:ro
        networks:
            app:
                aliases:
                    - app.php
            # main-nginx-proxy:
            # ports:
            # - "8000:8000"
        depends_on:
            - mysql
            - redis
            - rabbitmq
            - search
        restart: unless-stopped


    varnish:
        container_name: sw_varnish
        image: shopware6/varnish
        environment:
            SHOPWARE_BACKEND_HOST: php
            SHOPWARE_BACKEND_PORT: 8000
            SHOPWARE_ALLOWED_PURGER_IP: "\"app.php\""
            VARNISH_SIZE: 4G
            LETSENCRYPT_HOST: ${SW_DOMAIN},www.${SW_DOMAIN}
            VIRTUAL_HOST: ${SW_DOMAIN}
            VIRTUAL_PORT: 80
        restart: unless-stopped
        # ports:
        #     - 8000:80
        depends_on:
            - php
        networks:
            app:
            # main-nginx-proxy:


    mysql:
        container_name: sw_mysql
        image: mysql:8.3
        # mysql:8.4 still causes issues with Shopware
        command:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
            - "--binlog_expire_logs_seconds=3600"
            - '--skip-name-resolve' # Disable DNS lookups (not needed in Docker, improves performance)

            # Shopware Flags:
            - "--max-allowed-packet=52428800"
            - "--group_concat_max_len=320000"
            - "--sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
            - "--default-time-zone=+00:00"
        volumes:
            - mysql_volume:/var/lib/mysql
        cap_add:
            - SYS_NICE # Allow the container to adjust process priority (optional for performance tuning)
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: "false"
            MYSQL_INITDB_SKIP_TZINFO: '1' # Skip loading DB time zone tables (improves performance)
            ### Database initialization config:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: ${DB_INIT_ROOT_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            # ports:
            # - "3309:3306"
        restart: unless-stopped
        networks:
            app:


    redis:
        container_name: sw_redis
        image: redis:7
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_volume:/data
        networks:
            app:
        restart: unless-stopped


    rabbitmq:
        container_name: sw_rabbitmq
        image: rabbitmq:4-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        volumes:
            - rmq_volume:/var/lib/rabbitmq/mnesia
        networks:
            app:
        restart: unless-stopped


    search:
        container_name: sw_opensearch
        image: opensearchproject/opensearch:2
        deploy:
            resources:
                limits:
                    memory: 2G
        volumes:
            - os_volume:/usr/share/opensearch/data
        environment:
            discovery.type: single-node
            plugins.security.disabled: true
            ES_JAVA_OPTS: "-Xms1g -Xmx1g"
            OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${SHOPWARE_ES_INIT_ADMIN_PASSWORD}
        networks:
            app:
        restart: unless-stopped


    pma:
        container_name: sw_pma
        image: phpmyadmin:latest
        environment:
            PMA_HOST: mysql
            UPLOAD_LIMIT: 2G
            APACHE_PORT: 8080
            LETSENCRYPT_HOST: ${PMA_DOMAIN}
            VIRTUAL_HOST: ${PMA_DOMAIN}
            VIRTUAL_PORT: 8080
            # ports:
            # - "8080:8080"
        networks:
            app:
            # main-nginx-proxy:
        restart: unless-stopped


#    wp:
#        container_name: sw_wp
#        image: wordpress:php8.4-apache
#        restart: unless-stopped
#        depends_on:
#            - mysql
#        environment:
#            WORDPRESS_DB_HOST: mysql:3306
#            WORDPRESS_DB_NAME: ${WP_DB_DATABASE}
#            WORDPRESS_DB_USER: ${WP_DB_USER}
#            WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD}
#            LETSENCRYPT_HOST: ${WP_DOMAIN}
#            VIRTUAL_HOST: ${WP_DOMAIN}
#            VIRTUAL_PORT: 80
#        volumes:
#            - wp_volume:/var/www/html
#            - ./wordpress/wp.php.ini:/usr/local/etc/php/conf.d/wp.php.ini
#        deploy:
#            resources:
#                limits:
#                    cpus: '1'
#                    memory: 2G
#        networks:
#            app:
#            # main-nginx-proxy:
#
#
#    wp_files:
#        container_name: sw_wp_files
#        image: filebrowser/filebrowser:latest
#        restart: unless-stopped
#        depends_on:
#            - wp
#        environment:
#            LETSENCRYPT_HOST: ${FILES_DOMAIN}
#            VIRTUAL_HOST: ${FILES_DOMAIN}
#            VIRTUAL_PORT: 80
#        volumes:
#            - wp_volume:/srv
#            - fb_volume:/fb_data
#            - ./filebrowser/filebrowser.json:/.filebrowser.json
#        networks:
#            app:
#            # main-nginx-proxy:


volumes:
    mysql_volume:
        driver: local
    sw_volume:
        driver: local
    rmq_volume:
        driver: local
    redis_volume:
        driver: local
    os_volume:
        driver: local
    wp_volume:
        driver: local
    fb_volume:
        driver: local


networks:
    app:
        external: false
        # main-nginx-proxy:
        # external: true
